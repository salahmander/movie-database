{"version":3,"sources":["components/UI/appBar/AppBar.js","components/UI/background/Background.js","components/sideScroll/sideScrollCard/SideScrollCard.js","components/sideScroll/sideScrollView/SideScrollView.js","components/UI/spinner/Spinner.js","containers/home/Home.js","store/actions/latestMovieAction/latestMovieAction.js","store/actions/actionTypes.js","store/actions/latestTvAction/latestTvAction.js","store/actions/trendingAction/trendingAction.js","utility/utility.js","components/movie/movieDetail/MovieDetail.js","components/movie/movieRecommendation/MovieRecommendation.js","containers/movies/movieDetailDisplay/MovieDetailDisplay.js","store/actions/movieAction/movieDetailAction/movieDetailAction.js","store/actions/movieRecommendationAction/movieRecommendationAction.js","components/UI/noResults/NoResults.js","components/movie/movieCard/MovieCard.js","components/movie/movieView/MovieView.js","containers/movies/moviesListDisplay/MoviesListDisplay.js","store/actions/movieAction/moviesListAction/moviesListAction.js","components/UI/404page/404page.js","containers/tv/tvDetailDisplay/TvDetailDisplay.js","store/actions/movieAction/tvDetailAction/tvDetailAction.js","store/actions/tvRecommendationAction/tvRecommendationAction.js","router/Router.js","App.js","serviceWorker.js","store/reducers/latestMovieReducer/latestMovieReducer.js","store/reducers/latestTvReducer/latestTvReducer.js","store/reducers/movieReducer/movieDetailReducer/movieDetailReducer.js","store/reducers/movieRecommendationReducer/movieRecommendationReducer.js","store/reducers/movieReducer/moviesListReducer/moviesListReducer.js","store/reducers/trendingReducer/trendingReducer.js","store/reducers/movieReducer/tvDetailReducer/tvDetailReducer.js","store/reducers/tvRecommendationReducer/tvRecommendationReducer.js","store/index.js","store/store.js","index.js","assets/images/noImage.jpg","assets/images/noResults.png","constant.js"],"names":["useStyles","makeStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","sectionDesktop","sectionMobile","withRouter","history","classes","fetchMoviesHandler","event","preventDefault","push","target","value","id","className","AppBar","Toolbar","Typography","variant","noWrap","to","Button","InputBase","placeholder","root","input","inputProps","onKeyPress","keyCode","which","Background","Helmet","maxWidth","marginTop","marginBottom","card","minHeight","media","props","movie","poster","poster_path","imageURL","noImage","CardActionArea","onClick","media_type","Card","src","alt","CardContent","component","name","release_date","first_air_date","SideScrollView","movies","content","total_results","results","map","key","spinner","Home","this","onFetchLatestMovie","onFetchLatestTv","onFetchTrending","latestMovie","latestTv","loadingLatestMovie","loadingLatestTv","loadingTrending","trending","Component","connect","state","loading","dispatch","type","axios","get","bodyURL","APIKey","then","response","data","catch","error","setLatestMovieFail","message","setLatestTvFail","setTrendingFail","timeConverter","runtime","hours","Math","floor","minutes","MovieDetial","style","backgroundImage","backdrop_path","backdropURL","tagline","overview","genres","genre","index","MovieRecommendaiton","recommendation","MovieDetailDisplay","onFetchMovieDetail","match","params","onFetchMovieRecommendation","prevProps","onResetMovieDetail","loadingMovie","loadingRecommednation","movieRecommendation","movieDetail","movieID","setMovieDetailFail","fetchMovieDetail","setMovieRecommendationFail","fetchMovieRecommendation","NoResults","noResultImage","cardDetails","flex","cardMedia","linkStyle","textDecoration","Grid","item","xs","sm","md","lg","paragraph","description","length","substring","descriptionChecker","Hidden","xsDown","movieContainer","MovieView","showContent","container","MovieDisplay","onFetchMovies","moviesList","setMoviesListFail","moviesListAction","PageNotFound","TvDetailDisplay","onFetchTvDetail","onFetchTvRecommendation","onResetTvDetail","loadingTv","tvRecommendation","tv","tvDetail","tvID","setTvDetailFail","fetchTvDetail","setTvRecommendationFail","fetchTvRecommendation","Router","exact","path","MoviesListDisplay","pageNotFound","App","Boolean","window","location","hostname","initialState","latestMovieRequest","action","latestMovieSuccess","latestMovieFail","latestMovieReducer","latestTvRequest","latestTvSuccess","latestTvFail","latestTvReducer","movieDetailRequest","movieDetailSuccess","movieDetailFail","movieDetailReset","movieDetailReducer","movieRecommendationRequest","movieRecommendationSuccess","movieRecommendationFail","movieRecommendationReset","movieRecommendationReducer","moviesListRequest","moviesListSuccess","moviesListFail","moviesListReset","moviesListReducer","trendingRequest","trendingSuccess","trendingFail","trendingReducer","tvDetailRequest","tvDetailSuccess","tvDetailFail","tvDetailReset","tvDetailReducer","tvRecommendationRequest","tvRecommendationSuccess","tvRecommendationFail","tvRecommendationReset","tvRecommendationReducer","combineReducers","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console","module","exports"],"mappings":"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","file":"static/js/main.9672376f.chunk.js","sourcesContent":["import React from \"react\";\n\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Button from \"@material-ui/core/Button\";\nimport InputBase from \"@material-ui/core/InputBase\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\n\n// import IconButton from \"@material-ui/core/IconButton\";\n// import AccountCircle from \"@material-ui/icons/AccountCircle\";\n// import MenuIcon from \"@material-ui/icons/Menu\";\n\n\nimport { Link, withRouter } from \"react-router-dom\";\n\nconst useStyles = makeStyles((theme) => ({\n  grow: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginRight: theme.spacing(2),\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(3),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"md\")]: {\n      width: \"20ch\",\n    },\n  },\n  sectionDesktop: {\n    display: \"none\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n    },\n  },\n  sectionMobile: {\n    display: \"flex\",\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nconst MainAppBar = ({ history }) => {\n  const classes = useStyles();\n\n  // Enable once login as been sorted\n  // const menuId = \"primary-search-account-menu\";\n  // const mobileMenuId = \"primary-search-account-menu-mobile\";\n\n  const enterPressed = (event) => {\n    let code = event.keyCode || event.which;\n    if (code === 13) {\n      fetchMoviesHandler(event);\n    }\n  };\n\n  const fetchMoviesHandler = (event) => {\n    event.preventDefault();\n    history.push(`/movies/${event.target.value}`);\n  };\n\n  return (\n    <div id=\"main-app-bar\" className={classes.grow}>\n      <AppBar position=\"static\">\n        <Toolbar>\n          {/* Mobile nav bar */}\n          {/*<div className={classes.sectionMobile}>\n            <IconButton\n              edge=\"start\"\n              aria-controls={mobileMenuId}\n              className={classes.menuButton}\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n            >\n              <MenuIcon />\n            </IconButton>\n            </div>*/}\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            <Link to=\"/movie-database\">\n              <Button variant=\"contained\" color=\"primary\">\n                Movie-DB\n              </Button>\n            </Link>\n          </Typography>\n          <div className={classes.search}>\n            <div className={classes.searchIcon}>\n              <SearchIcon />\n            </div>\n            <InputBase\n              placeholder=\"Search…\"\n              classes={{\n                root: classes.inputRoot,\n                input: classes.inputInput,\n              }}\n              inputProps={{ \"aria-label\": \"search\" }}\n              onKeyPress={enterPressed}\n            />\n          </div>\n          <div className={classes.grow} />\n          {/* Enable once login as been sorted*/}\n          {/*<div className={classes.sectionDesktop}>\n            <IconButton\n              edge=\"end\"\n              aria-label=\"account of current user\"\n              aria-controls={menuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n          </div>\n          <div className={classes.sectionMobile}>\n            <IconButton\n              aria-label=\"show more\"\n              aria-controls={mobileMenuId}\n              aria-haspopup=\"true\"\n              color=\"inherit\"\n            >\n              <AccountCircle />\n            </IconButton>\n            </div> */}\n        </Toolbar>\n      </AppBar>\n    </div>\n  );\n};\n\nexport default withRouter(MainAppBar);\n","import React from \"react\";\nimport {Helmet} from 'react-helmet';\n\nconst Background = () => {\n  return (\n    <div className=\"background-container\">\n      <Helmet>\n        <style>{\"body { background-color: #353b48; }\"}</style>\n      </Helmet>\n    </div>\n  );\n};\n\nexport default Background;\n","import React from \"react\";\n\nimport { withRouter } from \"react-router-dom\";\nimport { imageURL } from \"../../../constant\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\n\nimport noImage from \"../../../assets/images/noImage.jpg\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 160,\n    marginLeft: \"10px\",\n    marginRight: \"10px\",\n    marginTop: \"5px\",\n    marginBottom: \"5px\",\n  },\n  card: {\n    minHeight: 380,\n    backgroundColor: \"#fff\",\n  },\n  media: {\n    width: 160,\n    height: 220,\n  },\n});\n\nconst SideScrollCard = (props) => {\n  const classes = useStyles();\n\n  const { movie, media } = props;\n\n  const actionCardHandler = (event) => {\n    event.preventDefault();\n    // Now playing(movies), On the air(tv) and recommendation do not have a media_type\n    // field, they need to be passed in.\n    if (movie.media_type === \"movie\") {\n      props.history.push(`/movie/${movie.id}`);\n    } else if (movie.media_type === \"tv\") {\n      props.history.push(`/tv/${movie.id}`);\n    } else {\n      props.history.push(`/${media}/${movie.id}`);\n    }\n  };\n\n  const poster = movie.poster_path\n    ? `${imageURL}w154${movie.poster_path}`\n    : noImage;\n\n  return (\n    <div className=\"side-scroll-card-container\">\n      <CardActionArea className={classes.root} onClick={actionCardHandler}>\n        <Card className={classes.card}>\n          <img className={classes.media} src={poster} alt=\"\" />\n          <CardContent>\n            <Typography component=\"h6\">\n              {movie.title} {movie.name}\n            </Typography>\n            <Typography variant=\"subtitle1\" color=\"textSecondary\">\n              {movie.release_date} {movie.first_air_date}\n            </Typography>\n          </CardContent>\n        </Card>\n      </CardActionArea>\n    </div>\n  );\n};\n\nexport default withRouter(SideScrollCard);\n","import React from \"react\";\n\nimport \"./SideScrollView.css\";\n\nimport SideScrollCard from \"../sideScrollCard/SideScrollCard\";\n\nconst SideScrollView = (props) => {\n  const { movies, media } = props;\n  \n  let content =\n    movies.total_results > 1\n      ? movies.results.map((movie) => (\n          <SideScrollCard key={movie.id} movie={movie} media={media} />\n        ))\n      : null;\n\n  return (\n    <div className=\"side-scroll-view-container\">\n      <div className=\"side-scroll-view-cards\">{content}</div>\n    </div>\n  );\n};\n\nexport default SideScrollView;\n","import React from \"react\";\nimport \"./Spinner.css\";\n\nconst spinner = () => {\n  return <div className=\"Loader\">Loading...</div>;\n};\n\nexport default spinner;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport \"./Home.css\";\n\nimport SideScrollView from \"../../components/sideScroll/sideScrollView/SideScrollView\";\nimport Spinner from \"../../components/UI/spinner/Spinner\";\n\nimport { fetchLatestMovie } from \"../../store/actions/latestMovieAction/latestMovieAction\";\nimport { fetchLatestTv } from \"../../store/actions/latestTvAction/latestTvAction\";\nimport { fetchTrending } from \"../../store/actions/trendingAction/trendingAction\";\n\nexport class Home extends Component {\n  componentDidMount() {\n    this.props.onFetchLatestMovie();\n    this.props.onFetchLatestTv();\n    this.props.onFetchTrending();\n  }\n\n  render() {\n    const {\n      latestMovie,\n      latestTv,\n      loadingLatestMovie,\n      loadingLatestTv,\n      loadingTrending,\n      trending,\n    } = this.props;\n    return (\n      <>\n        {/* Latest trending tv shows and movies*/}\n        <div className=\"home-display-container\">\n          <div className=\"home-display-trending\">\n            <h2 className=\"home-display-trending-header\">Trending</h2>\n            {loadingTrending ? (\n              <Spinner />\n            ) : (\n              <SideScrollView movies={trending}/>\n            )}\n          </div>\n          {/* Latest movies out now in Great Britain*/}\n          <div className=\"home-display-movie\">\n            <h2 className=\"home-display-movie-header\">Now Playing (Movies)</h2>\n            {loadingLatestMovie ? (\n              <Spinner />\n            ) : (\n              <SideScrollView movies={latestMovie} media=\"movie\" />\n            )}\n          </div>\n          {/* Latest TV shows currently on the air*/}\n          <div className=\"home-display-TV\">\n            <h2 className=\"home-display-movie-TV\">On The Air (TV)</h2>\n            {loadingLatestTv ? (\n              <Spinner />\n            ) : (\n              <SideScrollView movies={latestTv} media=\"tv\" />\n            )}\n          </div>\n        </div>\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  latestMovie: state.latestMovie.latestMovie,\n  latestTv: state.latestTv.latestTv,\n  loadingLatestMovie: state.latestMovie.loading,\n  loadingLatestTv: state.latestTv.loading,\n  loadingTrending: state.latestMovie.loading,\n  trending: state.trending.trending,\n});\n\nexport const mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchLatestMovie: () => dispatch(fetchLatestMovie()),\n    onFetchLatestTv: () => dispatch(fetchLatestTv()),\n    onFetchTrending: () => dispatch(fetchTrending()),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Home);\n","import * as actionTypes from \"../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../constant\";\n\nexport const setLatestMovieRequest = () => {\n  return {\n    type: actionTypes.LATEST_MOVIE_REQUEST,\n  };\n};\n\nexport const setLatestMovieSuccess = (latestMovie) => {\n  return {\n    type: actionTypes.LATEST_MOVIE_SUCCESS,\n    latestMovie: latestMovie,\n  };\n};\n\nexport const setLatestMovieFail = (error) => {\n  return {\n    type: actionTypes.LATEST_MOVIE_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchLatestMovie = () => {\n  return (dispatch) => {\n    dispatch(setLatestMovieRequest());\n    return axios\n       //Fetches latest movies released in  Great Britain. \n      .get(`${bodyURL}movie/now_playing?api_key=${APIKey}&region=GB`)\n      .then((response) => {\n        dispatch(setLatestMovieSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setLatestMovieFail(error.message));\n      });\n  };\n};\n","// Fetch all movies/TV series actions\nexport const MOVIES_LIST_FAIL = \"MOVIES_LIST_FAIL\";\nexport const MOVIES_LIST_REQUEST = \"MOVIES_LIST_REQUEST\";\nexport const MOVIES_LIST_RESET = \"MOVIES_LIST_RESET\";\nexport const MOVIES_LIST_SUCCESS = \"MOVIES_LIST_SUCCESS\";\n\n// Fetch movie detail actions\nexport const MOVIE_DETAIL_FAIL = \"MOVIE_DETAIL_FAIL\";\nexport const MOVIE_DETAIL_REQUEST = \"MOVIE_DETAIL_REQUEST\";\nexport const MOVIE_DETAIL_RESET = \"MOVIE_DETAIL_RESET\";\nexport const MOVIE_DETAIL_SUCCESS = \"MOVIE_DETAIL_SUCCESS\";\n\n// Fetch TV detail actions\nexport const TV_DETAIL_FAIL = \"TV_DETAIL_FAIL\";\nexport const TV_DETAIL_REQUEST = \"TV_DETAIL_REQUEST\";\nexport const TV_DETAIL_RESET = \"TV_DETAIL_RESET\";\nexport const TV_DETAIL_SUCCESS = \"TV_DETAIL_SUCCESS\";\n\n// Fetch landing page trending movies\nexport const TRENDING_FAIL = \"TRENDING_FAIL\";\nexport const TRENDING_REQUEST = \"TRENDING_REQUEST\";\nexport const TRENDING_SUCCESS = \"TRENDING_SUCCESS\";\n\n// Fetch landing page now playing (Movies)\nexport const LATEST_MOVIE_FAIL = \"LATEST_MOVIE_FAIL\";\nexport const LATEST_MOVIE_REQUEST = \"LATEST_MOVIE_REQUEST\";\nexport const LATEST_MOVIE_SUCCESS = \"LATEST_MOVIE_SUCCESS\";\n\n// Fetch landing page on the air (TV)\nexport const LATEST_TV_FAIL = \"LATEST_TV_FAIL\";\nexport const LATEST_TV_REQUEST = \"LATEST_TV_REQUEST\";\nexport const LATEST_TV_SUCCESS = \"LATEST_TV_SUCCESS\";\n\n// Fetch movie recommendation\nexport const MOVIE_RECOMMENDATION_FAIL = \"MOVIE_RECOMMENDATION_FAIL\";\nexport const MOVIE_RECOMMENDATION_REQUEST = \"MOVIE_RECOMMENDATION_REQUEST\";\nexport const MOVIE_RECOMMENDATION_RESET = \"MOVIE_RECOMMENDATION_RESET\";\nexport const MOVIE_RECOMMENDATION_SUCCESS = \"MOVIE_RECOMMENDATION_SUCCESS\";\n\n// Fetch TV recommendation\nexport const TV_RECOMMENDATION_FAIL = \"TV_RECOMMENDATION_FAIL\";\nexport const TV_RECOMMENDATION_REQUEST = \"TV_RECOMMENDATION_REQUEST\";\nexport const TV_RECOMMENDATION_RESET = \"TV_RECOMMENDATION_RESET\";\nexport const TV_RECOMMENDATION_SUCCESS = \"TV_RECOMMENDATION_SUCCESS\";\n\n//Recommendation Reducer\nexport const FETCH_MOVIE_RECOMMENDATION = \"FETCH_MOVIE_RECOMMENDATION\";\nexport const FETCH_TV_RECOMMENDATION = \"FETCH_TV_RECOMMENDATION\";\nexport const START_RECOMMENDATION_LOADING = \"START_RECOMMENDATION_LOADING\";\nexport const STOP_RECOMMENDATION_LOADING = \"STOP_RECOMMENDATION_LOADING\";\nexport const RECOMMEDNATION_ERROR = \"RECOMMEDNATION_ERROR\";\n","import * as actionTypes from \"../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../constant\";\n\nexport const setLatestTvRequest = () => {\n  return {\n    type: actionTypes.LATEST_TV_REQUEST,\n  };\n};\n\nexport const setLatestTvSuccess = (latestTv) => {\n  return {\n    type: actionTypes.LATEST_TV_SUCCESS,\n    latestTv: latestTv,\n  };\n};\n\nexport const setLatestTvFail = (error) => {\n  return {\n    type: actionTypes.LATEST_TV_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchLatestTv = () => {\n  return (dispatch) => {\n    dispatch(setLatestTvRequest());\n    return axios\n      .get(`${bodyURL}tv/on_the_air?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setLatestTvSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setLatestTvFail(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../constant\";\n\nexport const setTrendingRequest = () => {\n  return {\n    type: actionTypes.TRENDING_REQUEST,\n  };\n};\n\nexport const setTrendingSuccess = (trending) => {\n  return {\n    type: actionTypes.TRENDING_SUCCESS,\n    trending: trending,\n  };\n};\n\nexport const setTrendingFail = (error) => {\n  return {\n    type: actionTypes.TRENDING_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchTrending = () => {\n  return (dispatch) => {\n    dispatch(setTrendingRequest());\n    return axios\n      .get(`${bodyURL}trending/all/day?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setTrendingSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setTrendingFail(error.message));\n      });\n  };\n};\n","export const descriptionChecker = (title, description) => {\n  // check if the title is too long if so limit the description\n  if (title.length > 29) {\n    return description.substring(0, 130) + \"...\";\n  // check if description is too long if so limit the description\n  } else if (description.length > 180) {\n    return description.substring(0, 180) + \"...\";\n  }\n  // description is fine as it is\n  return description;\n};\n\nexport const updateObject = (oldObject, updatedProperties) => {\n  return {\n    ...oldObject,\n    ...updatedProperties,\n  };\n};\n\n// Converts movie runtime minutes to H:M\nexport const timeConverter = (runtime) => {\n  let hours = Math.floor(runtime / 60);\n  let minutes = runtime % 60;\n  return `${hours}h ${minutes}m`;\n};\n","import React from \"react\";\n\nimport { imageURL, backdropURL } from \"../../../constant\";\n\nimport noImage from \"../../../assets/images/noImage.jpg\";\n\nimport \"./MovieDetail.css\";\n\nconst MovieDetial = ({ movie, runtime }) => {\n  return (\n    <div\n      className=\"movie-detail-container\"\n      style={{\n        backgroundImage: `url(${\n          movie.backdrop_path ? `${backdropURL}${movie.backdrop_path}` : null\n        })`,\n      }}\n    >\n      <div className=\"hero-container\">\n        <div className=\"hero-box-main\">\n          <div className=\"hero-poster\">\n            <img\n              className=\"movie-poster\"\n              src={\n                movie.poster_path\n                  ? `${imageURL}w342${movie.poster_path}`\n                  : noImage\n              }\n              alt=\"\"\n            />\n          </div>\n          <div className=\"hero-content\">\n            <div className=\"hero-movie-heading\">\n              <h1 className=\"hero-movie-title\">\n                {movie.title} {movie.name}\n              </h1>\n              <h3 className=\"hero-movie-tagline\">{movie.tagline}</h3>\n              <div className=\"hero-movie-heading-info\">\n                <h4 className=\"hero-movie-date\">\n                  {movie.release_date} {movie.first_air_date}\n                </h4>\n                <h4 className=\"hero-movie-runtime\">{runtime}</h4>\n              </div>\n            </div>\n            <div className=\"hero-movie-description\">\n              <h2>Overview</h2>\n              <p>{movie.overview}</p>\n            </div>\n            <div className=\"hero-movie-information\">\n              <div className=\"hero-genres\">\n                <h2>Genres</h2>\n                <ul>\n                  {movie.genres &&\n                    movie.genres.map((genre, index) => (\n                      <li key={index}>{genre.name}</li>\n                    ))}\n                </ul>\n              </div>\n              <div className=\"hero-ratings\">\n                <h2>Ratings</h2>\n                <ul>\n                  <li>\n                    <strong>Rotten Tomatoes</strong> 85%{\" \"}\n                    {/*Need to get access to rotten Tomatoes API*/}\n                  </li>\n                  <li>\n                    <strong>IMDB</strong> 85%{\" \"}\n                    {/*Need to get access to IMDB API*/}\n                  </li>\n                </ul>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default MovieDetial;\n","import React from \"react\";\n\nimport \"./MovieRecommendaiton.css\";\nimport SideScrollView from \"../../sideScroll/sideScrollView/SideScrollView\";\n\nconst MovieRecommendaiton = (props) => {\n  const { recommendation, media } = props;\n\n  let content = recommendation.total_results ? (\n    <div className=\"movie-recommendation\">\n      <h2>Recommendation</h2>\n      <SideScrollView movies={recommendation} media={media} />\n    </div>\n  ) : null;\n\n  return (\n    <div className=\"movie-recommendation-display-container\">{content}</div>\n  );\n};\n\nexport default MovieRecommendaiton;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchMovieDetail } from \"../../../store/actions/movieAction/movieDetailAction/movieDetailAction\";\nimport { fetchMovieRecommendation } from \"../../../store/actions/movieRecommendationAction/movieRecommendationAction\";\nimport { MOVIE_DETAIL_RESET } from \"../../../store/actions/actionTypes\";\n\nimport { timeConverter } from \"../../../utility/utility\";\n\nimport MovieDetail from \"../../../components//movie/movieDetail/MovieDetail\";\nimport MovieRecommendaiton from \"../../../components/movie/movieRecommendation/MovieRecommendation\";\nimport Spinner from \"../../../components/UI/spinner/Spinner\";\n\n\nclass MovieDetailDisplay extends Component {\n  componentDidMount() {\n    this.props.onFetchMovieDetail(this.props.match.params.id);\n    this.props.onFetchMovieRecommendation(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.props.onResetMovieDetail();\n      this.props.onFetchMovieDetail(this.props.match.params.id);\n      this.props.onFetchMovieRecommendation(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const {\n      loadingMovie,\n      loadingRecommednation,\n      movieRecommendation,\n      movie,\n    } = this.props;\n\n    return (\n      <>\n        {loadingMovie ? (\n          <Spinner />\n        ) : (\n          <MovieDetail movie={movie} runtime={timeConverter(movie.runtime)} />\n        )}\n\n        {loadingRecommednation ? (\n          <Spinner />\n        ) : (\n          <MovieRecommendaiton\n            recommendation={movieRecommendation}\n            media={\"movie\"}\n          />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loadingMovie: state.movieDetail.loading,\n  movie: state.movieDetail.movie,\n\n  loadingRecommednation: state.movieRecommendation.loading,\n  movieRecommendation: state.movieRecommendation.movieRecommendation,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchMovieDetail: (movieID) => dispatch(fetchMovieDetail(movieID)),\n    onFetchMovieRecommendation: (movieID) =>\n      dispatch(fetchMovieRecommendation(movieID)),\n    onResetMovieDetail: () => dispatch({ type: MOVIE_DETAIL_RESET }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDetailDisplay);\n","import * as actionTypes from \"../../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../../constant\";\n\nexport const setMovieDetailRequest = () => {\n  return {\n    type: actionTypes.MOVIE_DETAIL_REQUEST,\n  };\n};\n\nexport const setMovieDetailSuccess = (movie) => {\n  return {\n    type: actionTypes.MOVIE_DETAIL_SUCCESS,\n    movie: movie,\n  };\n};\n\nexport const setMovieDetailFail = (error) => {\n  return {\n    type: actionTypes.MOVIE_DETAIL_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchMovieDetail = (movieID) => {\n  return (dispatch) => {\n    dispatch(setMovieDetailRequest());\n    return axios\n      .get(`${bodyURL}movie/${movieID}?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setMovieDetailSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setMovieDetailFail(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../constant\";\n\nexport const setMovieRecommendationRequest = () => {\n  return {\n    type: actionTypes.MOVIE_RECOMMENDATION_REQUEST,\n  };\n};\n\nexport const setMovieRecommendationSuccess = (movieRecommendation) => {\n  return {\n    type: actionTypes.MOVIE_RECOMMENDATION_SUCCESS,\n    movieRecommendation: movieRecommendation,\n  };\n};\n\nexport const setMovieRecommendationFail = (error) => {\n  return {\n    type: actionTypes.MOVIE_RECOMMENDATION_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchMovieRecommendation = (movieID) => {\n  return (dispatch) => {\n    dispatch(setMovieRecommendationRequest());\n    return axios\n      .get(`${bodyURL}movie/${movieID}/recommendations?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setMovieRecommendationSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setMovieRecommendationFail(error.message));\n      });\n  };\n};\n","import React from \"react\";\n\nimport \"./NoResults.css\";\n\nimport noResultImage from \"../../../assets/images/noResults.png\";\n\nconst NoResults = () => {\n  return (\n    <div className=\"no-results-container\">\n      <div className=\"no-results-box\">\n        <div className=\"no-results-image\">\n          <img src={noResultImage} alt=\"No results\" />\n        </div>\n        <div className=\"no-results-heading\">\n          <h1>Sorry couldn't find what you were looking for.</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default NoResults;\n","import React from \"react\";\n\nimport { imageURL } from \"../../../constant\";\nimport { descriptionChecker } from \"../../../utility/utility\";\n\nimport { withRouter } from \"react-router-dom\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Hidden from \"@material-ui/core/Hidden\";\n\nimport noImage from \"../../../assets/images/noImage.jpg\";\n\nconst useStyles = makeStyles({\n  card: {\n    display: \"flex\",\n    minHeight: 230,\n  },\n  cardDetails: {\n    flex: 3,\n  },\n  cardMedia: {\n    width: 160,\n    flex: 1,\n  },\n  linkStyle: {\n    textDecoration: \"none\",\n  },\n});\n\nconst MovieCard = (props) => {\n  const classes = useStyles();\n\n  const { movie } = props;\n\n  const actionCardHandler = (event) => {\n    event.preventDefault();\n    if (movie.media_type === \"movie\") {\n      props.history.push(`/movie/${movie.id}`);\n    } else {\n      props.history.push(`/tv/${movie.id}`);\n    }\n  };\n\n  const poster = movie.poster_path\n    ? `${imageURL}w154${movie.poster_path}`\n    : noImage;\n\n  // some movie objects have the title stored under name\n  const title = movie.title ? movie.title : movie.name;\n\n  return (\n    <Grid item xs={12} sm={12} md={6} lg={4}>\n      <CardActionArea onClick={actionCardHandler}>\n        <Card className={classes.card}>\n          <div className={classes.cardDetails}>\n            <CardContent>\n              <Typography component=\"h2\" variant=\"h5\">\n                {title}\n              </Typography>\n              <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                {movie.release_date}\n              </Typography>\n              <Typography variant=\"subtitle1\" paragraph>\n                {movie.overview\n                  ? descriptionChecker(title, movie.overview)\n                  : \"No Description :(\"}\n              </Typography>\n            </CardContent>\n          </div>\n          <Hidden xsDown>\n            <img className={classes.cardMedia} src={poster} alt=\"\" />\n          </Hidden>\n        </Card>\n      </CardActionArea>\n    </Grid>\n  );\n};\n\nexport default withRouter(MovieCard);\n","import React from \"react\";\n\nimport NoResults from \"../../UI/noResults/NoResults\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nimport MovieCard from \"../movieCard/MovieCard\";\nimport Grid from \"@material-ui/core/Grid\";\n\nconst useStyles = makeStyles(() => ({\n  movieContainer: {\n    padding: \"15px\",\n  },\n}));\n\nconst MovieView = (props) => {\n  const classes = useStyles();\n  const { movies } = props;\n\n  let content =\n    movies.total_results > 1\n      ? movies.results.map((movie) => (\n          <MovieCard key={movie.id} movie={movie} />\n        ))\n      : null;\n\n  let showContent =\n    content !== null ? (\n      <Grid container spacing={2}>\n        {content}\n      </Grid>\n    ) : (\n      <NoResults />\n    );\n\n  return <div className={classes.movieContainer}>{showContent}</div>;\n};\n\nexport default MovieView;\n","import React, { Component } from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport MovieView from \"../../../components/movie/movieView/MovieView\";\nimport Spinner from \"../../../components/UI/spinner/Spinner\";\n\nimport * as moviesListAction from \"../../../store/actions/movieAction/moviesListAction/moviesListAction\";\n\nclass MovieDisplay extends Component {\n  componentDidMount() {\n    this.props.onFetchMovies(this.props.match.params.name);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.name !== prevProps.match.params.name) {\n      this.props.onFetchMovies(this.props.match.params.name);\n    }\n  }\n\n  render() {\n    const { loading, movies } = this.props;\n\n    return (\n      <>{loading ? <Spinner /> : <MovieView movies={movies}> </MovieView>}</>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  loading: state.moviesList.loading,\n  movies: state.moviesList.movies,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchMovies: (name) => dispatch(moviesListAction.fetchMoviesList(name)),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(MovieDisplay);\n","import * as actionTypes from \"../../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../../constant\";\n\nexport const setMoviesListRequest = () => {\n  return {\n    type: actionTypes.MOVIES_LIST_REQUEST,\n  };\n};\n\nexport const setMoviesListSuccess = (movies) => {\n  return {\n    type: actionTypes.MOVIES_LIST_SUCCESS,\n    movies: movies,\n  };\n};\n\nexport const setMoviesListFail = (error) => {\n  return {\n    type: actionTypes.MOVIES_LIST_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchMoviesList = (name) => {\n  return (dispatch) => {\n    dispatch(setMoviesListRequest());\n    return axios\n      .get(`${bodyURL}search/multi?api_key=${APIKey}&query=${name}`)\n      .then((response) => {\n        dispatch(setMoviesListSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setMoviesListFail(error.message));\n      });\n  };\n};\n","import React from \"react\";\n\nimport \"./404page.css\";\n\nimport noResultImage from \"../../../assets/images/noResults.png\";\n\nconst PageNotFound = () => {\n  return (\n    <div className=\"page-not-found-container\">\n      <div className=\"page-not-found-box\">\n        <div className=\"page-not-found-image\">\n          <img src={noResultImage} alt=\"No results\" />\n        </div>\n        <div className=\"page-not-found-heading\">\n          <h1>Page Not Found</h1>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default PageNotFound;\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport { fetchTvDetail } from \"../../../store/actions/movieAction/tvDetailAction/tvDetailAction\";\nimport { fetchTvRecommendation } from \"../../../store/actions/tvRecommendationAction/tvRecommendationAction\";\nimport { TV_DETAIL_RESET } from \"../../../store/actions/actionTypes\";\n\nimport MovieDetail from \"../../../components/movie/movieDetail/MovieDetail\";\nimport MovieRecommendaiton from \"../../../components/movie/movieRecommendation/MovieRecommendation\";\nimport Spinner from \"../../../components/UI/spinner/Spinner\";\n\nclass TvDetailDisplay extends Component {\n  componentDidMount() {\n    this.props.onFetchTvDetail(this.props.match.params.id);\n    this.props.onFetchTvRecommendation(this.props.match.params.id);\n  }\n\n  componentDidUpdate(prevProps) {\n    if (this.props.match.params.id !== prevProps.match.params.id) {\n      this.props.onResetTvDetail();\n      this.props.onFetchTvDetail(this.props.match.params.id);\n      this.props.onFetchTvRecommendation(this.props.match.params.id);\n    }\n  }\n\n  render() {\n    const {\n      loadingTv,\n      loadingRecommednation,\n      tvRecommendation,\n      tv,\n    } = this.props;\n\n    return (\n      <>\n        {loadingTv ? <Spinner /> : <MovieDetail movie={tv} />}\n\n        {loadingRecommednation ? (\n          <Spinner />\n        ) : (\n          <MovieRecommendaiton recommendation={tvRecommendation} media={\"tv\"} />\n        )}\n      </>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => ({\n  tv: state.tvDetail.tv,\n  loadingTv: state.tvDetail.loading,\n\n  tvRecommendation: state.tvRecommendation.tvRecommendation,\n  loadingRecommednation: state.tvRecommendation.loading,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    onFetchTvDetail: (tvID) => dispatch(fetchTvDetail(tvID)),\n    onFetchTvRecommendation: (tvID) => dispatch(fetchTvRecommendation(tvID)),\n    onResetTvDetail: () => dispatch({ type: TV_DETAIL_RESET }),\n  };\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TvDetailDisplay);\n","import * as actionTypes from \"../../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../../constant\";\n\nexport const setTvDetailRequest = () => {\n  return {\n    type: actionTypes.TV_DETAIL_REQUEST,\n  };\n};\n\nexport const setTvDetailSuccess = (tv) => {\n  return {\n    type: actionTypes.TV_DETAIL_SUCCESS,\n    tv: tv,\n  };\n};\n\nexport const setTvDetailFail = (error) => {\n  return {\n    type: actionTypes.TV_DETAIL_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchTvDetail = (tvID) => {\n  return (dispatch) => {\n    dispatch(setTvDetailRequest());\n    return axios\n      .get(`${bodyURL}tv/${tvID}?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setTvDetailSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setTvDetailFail(error.message));\n      });\n  };\n};\n","import * as actionTypes from \"../actionTypes\";\nimport axios from \"axios\";\nimport { APIKey, bodyURL } from \"../../../constant\";\n\nexport const setTvRecommendationRequest = () => {\n  return {\n    type: actionTypes.TV_RECOMMENDATION_REQUEST,\n  };\n};\n\nexport const setTvRecommendationSuccess = (tvRecommendation) => {\n  return {\n    type: actionTypes.TV_RECOMMENDATION_SUCCESS,\n    tvRecommendation: tvRecommendation,\n  };\n};\n\nexport const setTvRecommendationFail = (error) => {\n  return {\n    type: actionTypes.TV_RECOMMENDATION_FAIL,\n    error: error,\n  };\n};\n\nexport const fetchTvRecommendation = (tvID) => {\n  return (dispatch) => {\n    dispatch(setTvRecommendationRequest());\n    return axios\n      .get(`${bodyURL}tv/${tvID}/recommendations?api_key=${APIKey}`)\n      .then((response) => {\n        dispatch(setTvRecommendationSuccess(response.data));\n      })\n      .catch((error) => {\n        dispatch(setTvRecommendationFail(error.message));\n      });\n  };\n};\n","import React from \"react\";\nimport { Route, Switch } from \"react-router-dom\";\n\nimport Home from \"../containers/home/Home\";\n\nimport MovieDetailDisplay from \"../containers/movies/movieDetailDisplay/MovieDetailDisplay\";\nimport MoviesListDisplay from \"../containers/movies/moviesListDisplay/MoviesListDisplay\";\nimport pageNotFound from \"../components/UI/404page/404page\";\nimport TvDetailDisplay from \"../containers/tv/tvDetailDisplay/TvDetailDisplay\";\n\n// import Login from \"../containers/account/login/Login\";\n// import Register from \"../containers/account/register/Register\";\n\nconst Router = () => {\n  return (\n    <>\n      <Switch>\n        <Route exact path=\"/movie-database\" component={Home} />\n        <Route exact path=\"/movie/:id\" component={MovieDetailDisplay} />\n        <Route exact path=\"/tv/:id\" component={TvDetailDisplay} />\n        <Route exact path=\"/movies/:name\" component={MoviesListDisplay} />\n        {/*<Route exact path=\"/register\" component={Register} /> */}{\" \"}\n        {/* Enable once login as been sorted */}\n        {/*<Route exact path=\"/login\" component={Login} /> */}{\" \"}\n        {/* Enable once login as been sorted */}\n        <Route component={pageNotFound} />\n      </Switch>\n    </>\n  );\n};\n\nexport default Router;\n","import React, { Component } from \"react\";\n\nimport AppBar from \"./components/UI/appBar/AppBar\";\nimport Background from \"./components/UI/background/Background\";\nimport Router from \"./router/Router\";\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Background />\n        <AppBar />\n        <Router />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import * as actionTypes from \"../../actions/actionTypes\";\n\nconst initialState = {\n  latestMovie: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const latestMovieRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const latestMovieSuccess = (state, action) => {\n  return {\n    ...state,\n    latestMovie: action.latestMovie,\n    loading: false,\n  };\n};\n\nexport const latestMovieFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst latestMovieReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LATEST_MOVIE_REQUEST:\n      return latestMovieRequest(state, action);\n    case actionTypes.LATEST_MOVIE_SUCCESS:\n      return latestMovieSuccess(state, action);\n    case actionTypes.LATEST_MOVIE_FAIL:\n      return latestMovieFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default latestMovieReducer;\n","import * as actionTypes from \"../../actions/actionTypes\";\n\nconst initialState = {\n  latestTv: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const latestTvRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const latestTvSuccess = (state, action) => {\n  return {\n    ...state,\n    latestTv: action.latestTv,\n    loading: false,\n  };\n};\n\nexport const latestTvFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst latestTvReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.LATEST_TV_REQUEST:\n      return latestTvRequest(state, action);\n    case actionTypes.LATEST_TV_SUCCESS:\n      return latestTvSuccess(state, action);\n    case actionTypes.LATEST_TV_FAIL:\n      return latestTvFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default latestTvReducer;\n","import * as actionTypes from \"../../../actions/actionTypes\";\n\nconst initialState = {\n  movie: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const movieDetailRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const movieDetailSuccess = (state, action) => {\n  return {\n    ...state,\n    movie: action.movie,\n    loading: false,\n  };\n};\n\nexport const movieDetailFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nexport const movieDetailReset = (state, action) => {\n  return {\n    ...state,\n    movie: [],\n    loading: false,\n    error: \"\",\n  };\n};\n\nconst movieDetailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIE_DETAIL_REQUEST:\n      return movieDetailRequest(state, action);\n    case actionTypes.MOVIE_DETAIL_SUCCESS:\n      return movieDetailSuccess(state, action);\n    case actionTypes.MOVIE_DETAIL_FAIL:\n      return movieDetailFail(state, action);\n    case actionTypes.MOVIE_DETAIL_RESET:\n      return movieDetailReset(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default movieDetailReducer;\n","import * as actionTypes from \"../../actions/actionTypes\";\n\nconst initialState = {\n  movieRecommendation: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const movieRecommendationRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const movieRecommendationSuccess = (state, action) => {\n  return {\n    ...state,\n    movieRecommendation: action.movieRecommendation,\n    loading: false,\n  };\n};\n\nexport const movieRecommendationFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nexport const movieRecommendationReset = (state, action) => {\n  return {\n    ...state,\n    movieRecommendation: [],\n    loading: false,\n    error: \"\",\n  };\n};\n\nconst movieRecommendationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIE_RECOMMENDATION_REQUEST:\n      return movieRecommendationRequest(state, action);\n    case actionTypes.MOVIE_RECOMMENDATION_SUCCESS:\n      return movieRecommendationSuccess(state, action);\n    case actionTypes.MOVIE_RECOMMENDATION_FAIL:\n      return movieRecommendationFail(state, action);\n    case actionTypes.MOVIE_RECOMMENDATION_RESET:\n      return movieRecommendationReset(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default movieRecommendationReducer;\n","import * as actionTypes from \"../../../actions/actionTypes\";\n\nconst initialState = {\n  movies: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const moviesListRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const moviesListSuccess = (state, action) => {\n  return {\n    ...state,\n    movies: action.movies,\n    loading: false,\n  };\n};\n\nexport const moviesListFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nexport const moviesListReset = (state, action) => {\n  return {\n    ...state,\n    movies: [],\n    loading: false,\n    error: \"\",\n  };\n};\n\nconst moviesListReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.MOVIES_LIST_REQUEST:\n      return moviesListRequest(state, action);\n    case actionTypes.MOVIES_LIST_SUCCESS:\n      return moviesListSuccess(state, action);\n    case actionTypes.MOVIES_LIST_FAIL:\n      return moviesListFail(state, action);\n    case actionTypes.MOVIES_LIST_RESET:\n      return moviesListReset(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default moviesListReducer;\n","import * as actionTypes from \"../../actions/actionTypes\";\n\nconst initialState = {\n  trending: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const trendingRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const trendingSuccess = (state, action) => {\n  return {\n    ...state,\n    trending: action.trending,\n    loading: false,\n  };\n};\n\nexport const trendingFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nconst trendingReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TRENDING_REQUEST:\n      return trendingRequest(state, action);\n    case actionTypes.TRENDING_SUCCESS:\n      return trendingSuccess(state, action);\n    case actionTypes.TRENDING_FAIL:\n      return trendingFail(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default trendingReducer;\n","import * as actionTypes from \"../../../actions/actionTypes\";\n\nconst initialState = {\n  tv: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const tvDetailRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const tvDetailSuccess = (state, action) => {\n  return {\n    ...state,\n    tv: action.tv,\n    loading: false,\n  };\n};\n\nexport const tvDetailFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nexport const tvDetailReset = (state, action) => {\n  return {\n    ...state,\n    tv: [],\n    loading: false,\n    error: \"\",\n  };\n};\n\nconst tvDetailReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TV_DETAIL_REQUEST:\n      return tvDetailRequest(state, action);\n    case actionTypes.TV_DETAIL_SUCCESS:\n      return tvDetailSuccess(state, action);\n    case actionTypes.TV_DETAIL_FAIL:\n      return tvDetailFail(state, action);\n    case actionTypes.TV_DETAIL_RESET:\n      return tvDetailReset(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default tvDetailReducer;\n","import * as actionTypes from \"../../actions/actionTypes\";\n\nconst initialState = {\n  tvRecommendation: [],\n  loading: false,\n  error: \"\",\n};\n\nexport const tvRecommendationRequest = (state, action) => {\n  return {\n    ...state,\n    loading: true,\n  };\n};\n\nexport const tvRecommendationSuccess = (state, action) => {\n  return {\n    ...state,\n    tvRecommendation: action.tvRecommendation,\n    loading: false,\n  };\n};\n\nexport const tvRecommendationFail = (state, action) => {\n  return {\n    ...state,\n    error: action.error,\n    loading: false,\n  };\n};\n\nexport const tvRecommendationReset = (state, action) => {\n  return {\n    ...state,\n    tvRecommendation: [],\n    loading: false,\n    error: \"\",\n  };\n};\n\nconst tvRecommendationReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case actionTypes.TV_RECOMMENDATION_REQUEST:\n      return tvRecommendationRequest(state, action);\n    case actionTypes.TV_RECOMMENDATION_SUCCESS:\n      return tvRecommendationSuccess(state, action);\n    case actionTypes.TV_RECOMMENDATION_FAIL:\n      return tvRecommendationFail(state, action);\n    case actionTypes.TV_RECOMMENDATION_RESET:\n      return tvRecommendationReset(state, action);\n    default:\n      return state;\n  }\n};\n\nexport default tvRecommendationReducer;\n","import { combineReducers } from \"redux\";\n\nimport latestMovieReducer from \"./reducers/latestMovieReducer/latestMovieReducer\";\nimport latestTvReducer from \"./reducers/latestTvReducer/latestTvReducer\";\nimport movieDetailReducer from \"./reducers/movieReducer/movieDetailReducer/movieDetailReducer\";\nimport movieRecommendationReducer from \"./reducers/movieRecommendationReducer/movieRecommendationReducer\";\nimport moviesListReducer from \"./reducers/movieReducer/moviesListReducer/moviesListReducer\";\nimport trendingReducer from \"./reducers/trendingReducer/trendingReducer\";\nimport tvDetailReducer from \"./reducers/movieReducer/tvDetailReducer/tvDetailReducer\";\nimport tvRecommendationReducer from \"./reducers/tvRecommendationReducer/tvRecommendationReducer\";\n\nexport default combineReducers({\n  latestMovie: latestMovieReducer,\n  latestTv: latestTvReducer,\n  movieDetail: movieDetailReducer,\n  movieRecommendation: movieRecommendationReducer,\n  moviesList: moviesListReducer,\n  trending: trendingReducer,\n  tvDetail: tvDetailReducer,\n  tvRecommendation: tvRecommendationReducer,\n});\n","import { createStore, applyMiddleware } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport rootReducer from \"./index.js\"\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store/store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/noImage.6525eb42.jpg\";","module.exports = __webpack_public_path__ + \"static/media/noResults.469cf09c.png\";","module.exports = {\n  APIKey: \"a5f10b7ffa7a2c925cf6dd9bdac3c9d0\",\n  bodyURL: \"https://api.themoviedb.org/3/\",\n  imageURL: \"https://image.tmdb.org/t/p/\",\n  backdropURL: \"https://image.tmdb.org/t/p/original\",\n};\n"],"sourceRoot":""}